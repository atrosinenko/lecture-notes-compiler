Внимание: при правильном выборе параметра jobs (и в некоторые моменты даже при
jobs=1) программа загружает процессор на 100%, также может происходить
достаточно активная работа с диском, поэтому при первом использовании следите
за температурой процессора и жёсткого диска и не забывайте, что должно нормально
работать охлаждение.
Также следует учитывать, что временные файлы занимают значительное место на 
диске (в частности, могут быть значительно больше исходных, если изначально 
страницы давались в сжатом формате: например, JPEG).




Эта программа предназначена для сборки отсканированных страниц конспекта в 
DjVu- и PDF-файлы. Кроме собственно сборки она может делать предварительную 
обработку: обрезать поля заданного цвета, поворачивать страницы (отдельно 
настраивается для чётных и нечётных страниц). Также поддерживается добавление 
оглавления из файла простого формата (см. ниже) как к собираемым конспектам, 
так и к уже готовым DjVu- и PDF-файлам.




### Оглавление ###

 1 Установка
 1.1 Установка на Ubuntu
 1.2 Установка на Windows
 
 2 Quick Start Guide
 2.1 Формат ini-файла
 2.2 Параметры transform.ini
 2.3 Формат toc.txt
 
 3 Файлы config.ini и project.ini
 3.1 Предопределённые значения
 3.2 Параметры секции [global]
 3.3 Параметры плагинов
 
 
 
 
=== 1 Установка ===

Для работы этого скрипта требуется Python2. Однако для обработки файлов он 
использует разнообразные внешние программы:

* ImageMagick (convert)
* DjVuLibre (c44, djvm, djvused)
* GhostScript (gs)

Чтобы уменьшить вероятность вызова посторонних программ вместо указанных выше 
(например, команды convert из поставки Windows), значение переменной PATH явным
образом должно задаваться в файле config.ini (см. далее).


-- 1.1 Установка на Ubuntu --

Для установки необходимых зависимостей из терминала выполните

sudo apt-get install python2.7 imagemagick djvulibre-bin ghostscript

После этого в секции [global] файла config.ini укажите
PATH: /usr/bin


-- 1.2 Установка на Windows --

TODO




=== 2 Quick Start Guide ===

Создайте каталог для проекта, а в нём каталог input, внутри которого -- папки с
именами вида "001-034" (две непустые группы цифр, разделённые символом '-'). 
В качестве чисел в названии предполагается указывать диаппазон номеров страниц,
лежащих в соответствующем каталоге. Поскольку при определении того, какая из 
страниц с одинаковым номером будет использована, эти каталоги просматриваются в
алфавитном порядке, крайне желательно числа указывать с ведущими нулями, чтобы
все числа имели одинаковую длину (поскольку иначе строка "100-143" идёт перед
строкой "20-78").

В каждом из каталогов input/nnn-nnn/ следует размещать изображения (желательно,
в несжатом формате: например, BMP или PNM) с именами вида "0023.pnm". Нумерация
может начинаться как с 0, так и с 1 -- главное, номера должны быть
положительными, порядок должен соответствовать реальному порядку и одинаковые
страницы в разных папках должны иметь одинаковые номера (в таком случае
выбирается файл из папки с лексикографически максимальным именем). Также в
каждом входном каталоге должен находиться файл transform.ini с параметрами
предварительного преобразования.
Для добавления оглавления в каталоге проекта нужно создать файл toc.txt.

Для запуска обработки нужно в терминале запустить lnc.py следующим образом:
python lnc.py <путь-к-каталогу-с-проектом> <выходное-имя-без-расширения>
Например:
python C:\konsp\lnc.py prj\alg algebra
После этого в каталоге проекта будет создан подкаталог output с выходными
файлами.


-- 2.1 Формат ini-файла --
Ini-файл состоит из секций, начинающихся с заголовка с именем секции в 
квадратных скобках. Внутри секций указываются параметры в формате 
"имя: значение", при этом в значении допустимы подстановки других значений 
(просматривается текущая секция, секция с именем "DEFAULT" и значения, 
заданные из программы). Для подстановки нужно указать "%(имя)s". 
Комментарии начинаются с ';'.

Пример файла:

[DEFAULT]
def-path: C:\folder1
sep: \

[params]
var1: tra-la-la
; Превратится в C:\folder1\folder2
var2: %(def-path)s%(sep)sfolder2


-- 2.2 Параметры transform.ini --
В файле transform.ini указываются параметры предварительной обработки, общие и
для djvu, и для pdf.

Параметры (все в секции [transform]):
(value) -- значение по умолчанию

* justconvert (no) -- просто сконвертировать исходные изображения в необходимый
    для дальнейшей обработки формат и никак не обрабатывать. При указании
    значения 'yes' остальные параметры игнорируются.
* chop-background (black) -- цвет фона, передаваемый команде convert. Поля этого цвета будут
    обрезаться.
* rotate-odd (0) -- на сколько градусов поворачивать нечётные страницы
    (указывайте значения кратные 90).
* rotate-even (0) -- то же для чётных страниц.
* chop-edge (None)-- укажите для отсканированных страниц, если страница прижата
    к какому-то краю, и между страницей и краем области сканирования что-то 
    проложено. Полезно для параллельности страницы "координатным осям", если
    при непосредственном прикладывании страницы к границе области сканирования
    есть узкие полоски, не попадающие в файл. Поддерживаемые значения
    (разделяются пробелами): North, East, West, South (или единственное
    значение None).
* chop-size (0) -- ширина игнорируемой полоски
* blur (10) -- опция "-blur 0x<число>" команды convert
* fuzz (30) -- опция "-fuzz <число>%"  команды convert

Пример:
+-----------------------------------+
|спичка      спичка      спичка     |
|+----------------+                 |  [transform]
||                |                 |  chop-background:  black
||                |                 |  chop-edge:   North
||                |                 |  chop-size:   30
||                |                 |
||                |                 |
||    страница    |                 |
||                |                 |
||                |                 |
||                |                 |
||                |                 |
||                |                 |
|+----------------+                 |
|                                   |
|                                   |
|                                   |
|                                   |
|                                   |
|                                   |
|                                   |
+-----------------------------------+


-- 2.3 Формат toc.txt --
В первой строке указывается имя кодировки, поддерживаемой Python. Дальнейшие
строки обрабатываются с учётом этой кодировки.
Все строки, кроме первой, имеют следующий формат:
<несколько '*'> <номер страницы> <описание>

Количество символов '*' означает уровень вложенности.

Пример: см. toc.example.txt




=== 3 Файлы config.ini и project.ini ===
При запуске считывается файл config.ini, находящийся в том же каталоге, что и
файл lnc.py, также считывается файл project.ini (если есть) из каталога проекта.

Для каждой секции вида "[__pluginname__]" загружается плагин pluginname.py из
каталога plugins. Загрузка плагинов возможна только из config.ini.

Цель -- это действие, выполняемое каким-то из плагинов. Для каждого плагина
создаётся цель с тем же именем. Также цели можно создавать, указав новую секцию
и добавив в неё параметр "__plugin__". В таком случае настройки из этой секции
будут перекрывать настройки из секции плагина.
При выполнении целей сообщение, показываемое пользователю после строчки вида
"[1 / 5]" берётся из параметра "__msg__" (если есть).

Для того, чтобы повторно не обрабатывать не изменившиеся файлы, используется
информация о времени последнего изменения.

-- 3.1 Предопределённые значения --
* OUTPUT -- второй параметр из командной строки
* PROJECT -- каталог обрабатываемого проекта
* SEP -- разделитель частей пути (Windows: '\', GNU/Linux: '/', ...)


-- 3.2 Параметры секции [global] --
* targets -- цели, которые будут последовательно выполнены
* jobs -- сколько потоков запускать (используется не всегда)
* PATH -- пути поиска внешних команд


-- 3.3 Параметры плагинов --

- 3.3.1 prepare -

Производит предварительную обработку изображений для плагинов djvu и pdf.

* input-dir -- где искать подкаталоги с именами вида "015-034", содержащие
    исходные изображения
* pages-dir -- куда записывать обработанные изображения
* transform-file -- название файла с параметрами преобразования (в папке с 
    изображениями)

- 3.3.2 djvu -

Генерирует DjVu-файл. Должен выполняться после prepare.

in-cache-dir -- откуда брать обработанные изображения
out-cache-dir -- куда класть кеш
djvu-file -- выходной DjVu-файл

- 3.3.3 pdf -

Генерирует PDF-файл. Должен выполняться после prepare.

Параметры налогичны djvu, но вместо "djvu-file" -- "pdf-file".

- 3.3.4 djvu_toc -

Добавляет оглавление к DjVu-файлу. Обычно должен выполняться после djvu.

toc-file -- файл с оглавлением (см. 2.3)
tmp-file -- временный текстовый файл
djvu-file -- DjVu-файл, к которому добавляется оглавление

- 3.3.4 pdf_toc -

Добавляет оглавление к PDF-файлу. Обычно должен выполняться после pdf.

toc-file -- файл с оглавлением (см. 2.3)
tmp-file -- временный текстовый файл
pdf-file -- PDF-файл, к которому добавляется оглавление
pdf-tmp-file -- временный PDF-файл

